name: Run Unit Test via Pytest
on:
  push:
    branches:
      - master
jobs:
    test:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: ["3.10", "3.11", "3.12", "3.13"]
        steps:
            - uses: actions/checkout@v4

            - name: 'Set up Python ${{ matrix.python-version }}'
              uses: actions/setup-python@v5
              with:
                  python-version: '${{ matrix.python-version }}'

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements-dev.txt
              continue-on-error: false

            - name: Run Flake8
              run: |
                  python -m flake8

            - name: Run MyPy
              run: |
                  python -m mypy dupfilesremover

            - name: Test with pytest
              run: |
                  python -m pytest ./tests -vvv --cov=dupfilesremover

            - name: Generate Coverage Report
              run: |
                  python -m coverage report

    release-build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-python@v5
              with:
                  python-version: "3.x"

            - name: Build release distributions
              run: |
                  # NOTE: put your own distribution build steps here.
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt

            - name: Check package
              run: |
                  python setup.py check 

            - name: Upload distributions
              uses: actions/upload-artifact@v4
              with:
                  name: release-dists
                  path: dist/

    pypi-publish:
        runs-on: ubuntu-latest
        needs:
            - release-build
        permissions:
            # IMPORTANT: this permission is mandatory for trusted publishing
            id-token: write

        # Dedicated environments with protections for publishing are strongly recommended.
        # For more information, see: https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#deployment-protection-rules
        environment:
            name: pypi
            # OPTIONAL: uncomment and update to include your PyPI project URL in the deployment status:
            # url: https://pypi.org/p/YOURPROJECT
            #
            # ALTERNATIVE: if your GitHub Release name is the PyPI project version string
            # ALTERNATIVE: exactly, uncomment the following line instead:
            # url: https://pypi.org/project/YOURPROJECT/${{ github.event.release.name }}

        steps:
            - name: Retrieve release distributions
              uses: actions/download-artifact@v4
              with:
                  name: release-dists
                  path: dist/

            - name: Publish release distributions to PyPI
              uses: pypa/gh-action-pypi-publish@release/v1
              with:
                  packages-dir: dist/